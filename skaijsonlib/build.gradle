apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'


bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] // When uploading configuration files

    publish = true // [Default: false] Whether version should be auto published after an upload

    pkg {
        repo = 'maven' // Repository name (Created in the repository Bintray site)
        name = 'skaijson' // module name
        userOrg = 'jwmtp2' // An optional organization name when the repo belongs to one of the user's orgs
        desc = 'JSON Reflection parsing library for android.' // Optional
        licenses = ['Apache-2.0']

        vcsUrl = 'https://github.com/SKAIBlue/SKAIJSON.git'
        websiteUrl = 'https://github.com/SKAIBlue/SKAIJSON'
        // issueTrackerUrl = '' // Optional

        labels = ['aar', 'android', 'example'] // Optional
        publicDownloadNumbers = true

        githubRepo = 'SKAIBlue/SKAIJSON' // Optional Github repository
        githubReleaseNotesFile = 'README.MD' // Optional Github readme file

        version {
            name = 'skaijson'// The name of your library project
            desc = 'JSON Reflection parsing library for android.' // Optional - Version-specific description'
            released  = new Date() // Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = 'skaijson'
        }
    }
}

// JCenter publish
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        //multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

buildscript {

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        // classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
